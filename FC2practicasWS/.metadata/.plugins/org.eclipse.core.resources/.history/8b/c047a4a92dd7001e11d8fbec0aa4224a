/*---------------------------------------------------------------------
**
**  Fichero:
**    pr3_lab.asm  29/02/2024
**
**    (c) Daniel Báscones García
**    Fundamentos de Computadores II
**    Facultad de Informática. Universidad Complutense de Madrid
**
**  Propósito:
**    Fichero de código para la práctica 3_lab
**
**-------------------------------------------------------------------*/

.extern _stack
.global main
.equ N, 4

.data
A:      .word 3,5,1,9
B:      .word 1,6,2,3

.bss
	res:  .space 4

.text
main:
	la sp, _stack	//Inicialización de la pila
	la a0, A		//a0 = @base A1
	la a1, A		//a1 = @base A2
	li a2, N		//a2 = N
	call dotprod
	la t0, res		//t0 = @base Res
	sw a0, 0(t0)
fin:
	j fin

dotprod:
	addi sp, sp, -24 	/////
	sw ra, 20( sp) 		//
	sw s0, 16( sp) 		//
	sw s1, 12( sp) 		// PRÓLOGO
	sw s2, 8( sp) 		//
	sw s3, 4( sp) 		//
	sw s4, 0( sp) 		/////
	li s0, 0 			// s0 = acc = 0
	li s1, 0 			// s1 = i
	mv s2, a0 			// s2 = @A1
	mv s3, a1 			// s3 = @A2
	mv s4, a2 			// s4 = N

while:
	bge s1, s4, ewhile
	lw a0, 0(s2)		//a0 = A[i]
	lw a1, 0(s2)		//a1 = A[i]
	call mul
	add s0, s0, a0		//acc += mul
	addi s1, s1, 1		//i++
	addi s2 , s2 , 4 	//@A1++
	addi s3 , s3 , 4 	//@A2++
	j while

ewhile:
	mv a0, s0
	lw ra, 20( sp) 		// ///
	lw s0, 16( sp) 		//
	lw s1, 12( sp)		//
	lw s2, 8( sp) 		// EPÍLOGO
	lw s3, 4( sp) 		//
	lw s4, 0( sp) 		//
	addi sp, sp , 24 	// ///
	ret

mul:

emul:
	ret






