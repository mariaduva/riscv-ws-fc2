
pr2_a.elf:     file format elf32-littleriscv
pr2_a.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000048 memsz 0x00000048 flags r-x
    LOAD off    0x00002000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000024 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .text             00000048  00000000  00000000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data             00000020  00010000  00010000  00002000  2**0  CONTENTS, ALLOC, LOAD, DATA
  2 .bss              00000004  00010020  00010020  00002020  2**0  ALLOC
  3 .riscv.attributes 0000001f  00000000  00000000  00002020  2**0  CONTENTS, READONLY
  4 .debug_line       00000097  00000000  00000000  0000203f  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info       00000026  00000000  00000000  000020d6  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev     00000014  00000000  00000000  000020fc  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges    00000020  00000000  00000000  00002110  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str        00000037  00000000  00000000  00002130  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00010000 l    d  .data	00000000 .data
00010020 l    d  .bss	00000000 .bss
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 ./pr2_a.o
00000008 l       *ABS*	00000000 N
00010000 l       *ABS*	00000000 INT_MAX
00010000 l       .data	00000000 V
00010020 l       .bss	00000000 min
00000020 l       .text	00000000 for
00000040 l       .text	00000000 end_for
00000030 l       .text	00000000 if
00000038 l       .text	00000000 end_if
00000048 l       .text	00000000 end
00000000 g       .text	00000000 main
00020000 g       *ABS*	00000000 _stack



Disassembly of section .text:

00000000 <main>:
main():
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:38
.bss
min: .space 4

.text
main:
	la s1, min 		// s1 = @base min
   0:	00010497          	auipc	s1,0x10
   4:	02048493          	addi	s1,s1,32 # 10020 <min>
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:39
	li t0, INT_MAX 	// t0 = INT_MAX (t0 min!!)
   8:	000102b7          	lui	t0,0x10
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:40
	sw t0, 0(s1)	// Almacenamos en memoría el contenido de t0 (INT_MAX)
   c:	0054a023          	sw	t0,0(s1)
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:42

	li t1, 0 		// t1 = i = 0
  10:	00000313          	li	t1,0
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:43
    li s2, N        // s2 = N = 8
  14:	00800913          	li	s2,8
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:44
    la t2, V		// t2 = @base de V
  18:	00010397          	auipc	t2,0x10
  1c:	fe838393          	addi	t2,t2,-24 # 10000 <INT_MAX>

00000020 <for>:
for():
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:46
for:
    bge t1, s2, end_for	// Salimos del bucle si i >= N
  20:	03235063          	bge	t1,s2,40 <end_for>
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:47
	slli t3, t1, 2		// t3 = Desplazamiento de 4 bytes (i * 4)
  24:	00231e13          	slli	t3,t1,0x2
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:48
    add t3,t3,t2 		// t3 = @efectiva de V[i]
  28:	007e0e33          	add	t3,t3,t2
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:49
	lw s4,0(t3)			// s4 = V[i]
  2c:	000e2a03          	lw	s4,0(t3)

00000030 <if>:
if():
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:52

if:
	bgt s4, t0, end_if 	// Salta si s4 > t0
  30:	0142c463          	blt	t0,s4,38 <end_if>
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:53
	mv t0, s4 			// Asignamos min = V[i]
  34:	000a0293          	mv	t0,s4

00000038 <end_if>:
end_if():
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:55
end_if:
	addi t1, t1, 1
  38:	00130313          	addi	t1,t1,1
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:56
	j for
  3c:	fe5ff06f          	j	20 <for>

00000040 <end_for>:
end_for():
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:59

end_for:
	sw t0, 0(s1) // Almacenamos en memoría el min de V
  40:	0054a023          	sw	t0,0(s1)
C:\FC2practicasWS\pr2_a\Debug/../pr2_a.asm:60
	j end
  44:	0040006f          	j	48 <end>
